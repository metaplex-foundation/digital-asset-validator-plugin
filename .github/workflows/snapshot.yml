name: Build and Push Snapshot ETL

on:
  push:
    tags:
      - 'v*'  # Лише на глобальні теги для продакшн білдів

jobs:
  check-label:
    runs-on: ubuntu-latest
    outputs:
      build_snapshot_etl: ${{ steps.set_build_flag.outputs.build_snapshot_etl }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Отримуємо Pull Request за допомогою API на основі коміту
      - name: Get related Pull Request and check label
        id: set_build_flag
        uses: actions/github-script@v6
        with:
          script: |
            const commit_sha = github.context.sha;
            const { data: pullRequests } = await github.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: commit_sha
            });

            if (pullRequests.length > 0) {
              const pr = pullRequests[0];  // Отримуємо перший PR для коміту
              const hasLabel = pr.labels.some(label => label.name === 'build-snapshot-etl');
              if (hasLabel) {
                core.setOutput("build_snapshot_etl", "true");
              } else {
                core.setOutput("build_snapshot_etl", "false");
              }
            } else {
              console.log("No PR found for the commit.");
              core.setOutput("build_snapshot_etl", "false");
            }
  build-etl:
    runs-on: ubuntu-latest
    needs: check-label
    if: needs.check-label.outputs.build_snapshot_etl == 'true'
    steps:
      - name: Debugging Output
        run: |
          echo "::debug::Checking if the job should run based on the output"
          echo "build_snapshot_etl=${{ needs['check-label'].outputs.build_snapshot_etl }}"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker Image for Snapshot ETL
        env:
          APP: "solana-snapshot-etl"
          REGISTRY: ghcr.io/${{ github.repository_owner }}
        working-directory: plerkle_snapshot
        run: make build push

      - name: Clean
        run: make clean
